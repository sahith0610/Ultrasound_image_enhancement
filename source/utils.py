if __name__=='__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--dataA', default='Domain A')
    parser.add_argument('--dataB', default='Domain B')
    parser.add_argument('--size', type=int,default=64)
    parser.add_argument('--base',type=int,default=32)
    parser.add_argument('--time_dim', type=int, default=32)
    parser.add_argument('--unet_depth', type=int, default=4)
    parser.add_argument('--disc_layers',type=int, default=4)
    parser.add_argument('--batch',  type=int, default=4)
    parser.add_argument('--epochs',type=int, default=100)
    parser.add_argument('--lr_g', type=float, default=1e-4)
    parser.add_argument('--lr_d', type=float, default=2e-5)
    parser.add_argument('--lambda_adv', type=float, default=1.0)
    parser.add_argument('--lambda_cycle', type=float,default=10.0)
    parser.add_argument('--lambda_id', type=float,default=3.0)
    parser.add_argument('--lambda_per',type=float,default=1.0)
    parser.add_argument('--lambda_ddpm',type=float,default=3.0)
    parser.add_argument('--timesteps',type=int,default=1000)
    parser.add_argument('--device',default='cuda' if torch.cuda.is_available() else 'cpu')
    args,_ = parser.parse_known_args()

    train(args)